# personal
alias desk="mux desk"
alias xcd='cd "$(xplr --print-pwd-as-result)"'
alias dmurder='docker stop $(docker ps -aq) && docker rm -f $(docker ps -aq) && docker system prune -a'
alias cpwd='pwd | pbcopy'

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

alias ya="y"

############################ STANDARD ###############################
alias h='history -10'
alias hc='history -c'
alias hg='history | grep'
alias ybs='yarn build && yarn start'

############################ TMUX ###############################
alias tm="tmux"

function tmux_kill() {
  if read -q '?exiting tmux? (y/n) ?'; then
  tmux kill-server
fi
}

alias km=tmux_kill
alias mux='tmuxinator'

function tree-git-ignore {
    local ignored=$(git ls-files -ci --others --directory --exclude-standard)
    local ignored_filter=$(echo "$ignored" \
                    | egrep -v "^#.*$|^[[:space:]]*$" \
                    | sed 's~^/~~' \
                    | sed 's~/$~~' \
                    | tr "\\n" "|")
    tree --prune -I ".git|${ignored_filter: : -1}" "$@"
}
alias gtree=tree-git-ignore

############################ GIT ###############################
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gk='gitk --all&'
alias gx='gitx --all'
alias ghist='git hist'
    
################ DEFAULT APP REPLACEMENTS ######################
alias ls='exa'
alias ll='ls -l'
alias exa='exa --icons'
alias cat='bat'
alias bat='bat -p -p'
alias grep='rg -uu'
alias rmv='rm -rfi'
alias zshrc='nvim ~/.zshrc'
alias vimrc='nvim ~/.config/nvim/init.lua'
alias python='python3'
alias pip='pip3'
alias ranger='ranger --choosedir=$HOME/.rangerdir; LASTDIR=`cat $HOME/.rangerdir`; cd "$LASTDIR"' #Ranger CD on exit

################# MAC ####################################
alias preview='open -a Preview'
alias avcstaging='mux s avcstaging'

############################ DOCKER ###############################
function dnames-fn {

	for ID in `docker ps | awk '{print $1}' | grep -v 'CONTAINER'`
	do
    	docker inspect $ID | grep Name | head -1 | awk '{print $2}' | sed 's/,//g' | sed 's%/%%g' | sed 's/"//g'
	done
}

function dip-fn {
    echo "IP addresses of all named running containers"

    for DOC in `dnames-fn`
    do
        IP=`docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}} {{end}}' "$DOC"`
        OUT+=$DOC'\t'$IP'\n'
    done
    echo -e $OUT | column -t
    unset OUT
}

function dex-fn {
docker exec -it $1 ${2:-bash}
}

function di-fn {
	docker inspect $1
}

function dl-fn {
	docker logs -f $1
}

function drun-fn {
	docker run -it $1 $2
}

function dcr-fn {
	docker compose run $@
}

function dsr-fn {
	docker stop $1;docker rm $1
}

function drmc-fn {
       docker rm $(docker ps --all -q -f status=exited)
}

function drmid-fn {
       imgs=$(docker images -q -f dangling=true)
       [ ! -z "$imgs" ] && docker rmi "$imgs" || echo "no dangling images."
}

# in order to do things like dex $(dlab label) sh
function dlab {
       docker ps --filter="label=$1" --format="{{.ID}}"
}

function dc-fn {
        docker compose $*
}

function d-aws-cli-fn {
    docker run \
           -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
           -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
           -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
           amazon/aws-cli:latest $1 $2 $3
}

# run AWS-CLI dockerized
alias daws=d-aws-cli-fn

# Docker compose
alias dc=dc-fn
alias dcu="docker compose up -d"
alias dcd="docker compose down"
# Docker Compose Run
alias dcr=dcr-fn
# Docker exec -it
alias dex=dex-fn
# Docker inspect
alias di=di-fn
alias dim="docker images"
# IP Addresses of all running containers
alias dip=dip-fn
alias dl=dl-fn
alias dnames=dnames-fn
alias dps="docker ps"
alias dpsa="docker ps -a"
alias drmc=drmc-fn
alias drmid=drmid-fn
alias drun=drun-fn
alias dsp="docker system prune --all"
alias dsr=dsr-fn
alias fm='frogmouth'


